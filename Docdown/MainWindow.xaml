<Metro:MetroWindow x:Class="Docdown.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:Controls="clr-namespace:Docdown.Controls"
        xmlns:ViewModel="clr-namespace:Docdown.ViewModel"
        mc:Ignorable="d"
        TitleCharacterCasing="Normal"
        Title="Docdown - Document Converter" Height="450" Width="800"
        WindowTitleBrush="{DynamicResource MahApps.Brushes.ThemeBackground}"
        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
        Dialog:DialogParticipation.Register="{Binding}"
        NonActiveWindowTitleBrush="{DynamicResource MahApps.Brushes.ThemeBackground}"
        UseLayoutRounding="True"
        x:Name="DocdownWindow"
        TitleTemplate="{StaticResource DefaultTitleTemplate}"
        IconTemplate="{StaticResource DefaultIconTemplate}">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <Style BasedOn="{StaticResource MahApps.Styles.Button.Flat}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
                <Setter Property="Margin" Value="1 0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource OverlayBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Workspace.SaveSelectedItemCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding Workspace.SaveAllItemsCommand}"/>
        <KeyBinding Key="F5" Command="{Binding Workspace.ConvertCommand}"/>
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding Workspace.PrintCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding SearchWorkspaceCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="*" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ExplorerVisible}" Value="False"/>
                                    <Condition Binding="{Binding OutlineVisible}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Width" Value="0" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Menu Grid.ColumnSpan="3" Grid.Row="0" Style="{StaticResource VSMenu}" ItemContainerStyle="{StaticResource VSMenuItem}">
            <MenuItem Header="{DynamicResource Main_Menu_File}">
                <MenuItem Header="{DynamicResource Main_Menu_File_OpenWorkspace}" 
                          Command="{Binding SearchWorkspaceCommand}"
                          InputGestureText="{DynamicResource Main_Menu_File_OpenWorkspace_Gesture}">
                    <MenuItem.Icon>
                        <Rectangle Fill="{DynamicResource OpenFolderIcon}" Height="16" Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Web Workspaces" 
                          Command="{Binding User.EnsureLoginCommand}"
                          IsEnabled="{Binding Settings.IsConnected}" 
                          ItemsSource="{Binding User.Workspaces}">
                    <MenuItem.Icon>
                        <Rectangle Fill="{DynamicResource WebIcon}" Height="16" Width="16"/>
                    </MenuItem.Icon>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding OpenWorkspaceCommand}"/>
                            <Setter Property="Padding" Value="0 6"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="{DynamicResource Main_Menu_File_LastWorkspaces}" ItemsSource="{Binding Settings.LastWorkspaces}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding OpenWorkspaceCommand}"/>
                            <Setter Property="Padding" Value="0 6"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Margin="6 0"/>
                <MenuItem Header="{DynamicResource Main_Menu_File_Close}" 
                          Command="{Binding Workspace.SelectedItem.CloseCommand, FallbackValue={x:Null}}"/>
                <MenuItem Header="{DynamicResource Main_Menu_File_CloseAll}" 
                          Command="{Binding Workspace.CloseAllItemsCommand}"/>
                <Separator Margin="6 0"/>
                <MenuItem Header="{DynamicResource Main_Menu_File_Import}" 
                          Command="{Binding Workspace.ImportCommand}" 
                          ToolTip="{DynamicResource Main_Menu_File_Import_Tooltip}"/>
                <Separator Margin="6 0"/>
                <MenuItem Header="{DynamicResource Main_Menu_File_Exit}" 
                          Click="MenuItemExitClicked">
                    <MenuItem.Icon>
                        <Rectangle Fill="{DynamicResource CloseIcon}" 
                                   Height="16" 
                                   Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Workspace Explorer" 
                          Command="{Binding ShowExplorerCommand}"/>
                <MenuItem Header="Outline" 
                          Command="{Binding ShowOutlineCommand}"/>
                <Separator/>
                <MenuItem Header="Tasks"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource Main_Menu_Options}">
                <MenuItem Header="{DynamicResource Main_Menu_Options_ThemeSwitch}" 
                          Command="{Binding SwitchThemeCommand}">
                    <MenuItem.Icon>
                        <Rectangle Fill="{Binding ThemeName, Converter={StaticResource StringToResourceConverter}}" 
                                   Height="16" 
                                   Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{DynamicResource Main_Menu_Options_Language}">
                    <MenuItem Header="English" 
                              Command="{Binding ChangeLanguageCommand}" 
                              CommandParameter="English"/>
                    <MenuItem Header="Deutsch" 
                              Command="{Binding ChangeLanguageCommand}" 
                              CommandParameter="German"/>
                </MenuItem>
                <MenuItem Header="Document Language">
                    <MenuItem Header="English"
                              Command="{Binding ChangeDocumentLanguageCommand}"
                              CommandParameter="English"/>
                    <MenuItem Header="German"
                              Command="{Binding ChangeDocumentLanguageCommand}"
                              CommandParameter="German"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource Main_Menu_Options_Settings}" 
                          Command="{Binding OpenSettingsCommand}">
                    <MenuItem.Icon>
                        <Rectangle Fill="{DynamicResource SettingsIcon}" 
                                   Height="16" 
                                   Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{DynamicResource Main_Menu_Help}">
                <MenuItem Header="Check for update"
                          Command="{Binding UpdateCommand}"/>
                <Separator/>
                <MenuItem Header="{DynamicResource Main_Menu_Help_Markdown}" 
                          Click="MarkdownHelpMenuClicked">
                    <MenuItem.Icon>
                        <Rectangle Fill="{DynamicResource MarkdownIcon}" 
                                   Height="16" 
                                   Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{DynamicResource Main_Menu_Help_About}" 
                          Click="AboutHelpMenuClicked">
                    
                </MenuItem>
            </MenuItem>
        </Menu>
        <StackPanel Grid.ColumnSpan="3" 
                    Grid.Row="1" 
                    Orientation="Horizontal" 
                    Background="{DynamicResource WhiteBrush}"
                    Margin="4 0 4 2">
            <Button Command="{Binding SearchWorkspaceCommand}" 
                    ToolTip="{DynamicResource Main_Menu_File_OpenWorkspace}">
                <Rectangle Fill="{DynamicResource OpenFolderIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding Workspace.SelectedItem.SaveCommand, FallbackValue={x:Null}}">
                <Button.ToolTip>
                    <ToolTip Content="{Binding Workspace.SelectedItem.Name, FallbackValue={x:Null}}"
                             ContentStringFormat="{DynamicResource Main_Menu_Save_Tooltip}"
                             Visibility="{Binding Workspace.SelectedItem, Converter={StaticResource StringToVisibilityConverter}}"/>
                </Button.ToolTip>
                <Rectangle Fill="{DynamicResource SaveIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding Workspace.SaveAllItemsCommand}" 
                    ToolTip="{DynamicResource Main_Menu_SaveAll_Tooltip}">
                <Rectangle Fill="{DynamicResource SaveAllIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Rectangle Width="1" 
                       Margin="0 2" 
                       Fill="{DynamicResource MahApps.Brushes.Gray9}"/>
            <Button IsEnabled="{Binding Workspace.CanConvert, FallbackValue=False}" 
                    Command="{Binding Workspace.ConvertCommand, FallbackValue={x:Null}}" 
                    Height="20" 
                    Width="Auto">
                <Button.ToolTip>
                    <ToolTip Content="{Binding ToType}"
                             ContentStringFormat="{DynamicResource Main_Menu_Start_Tooltip}"/>
                </Button.ToolTip>
                <StackPanel Orientation="Horizontal">
                    <Rectangle Fill="{StaticResource RunIcon}" 
                               Height="16" 
                               Width="16"/>
                    <TextBlock Text="{DynamicResource Main_Menu_Start}" 
                               FontSize="{StaticResource DefaultFontSize}" 
                               Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" 
                               Margin="4 0 6 0"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding Workspace.StopConvertCommand}" 
                    ToolTip="{DynamicResource Main_Menu_Stop_Tooltip}" 
                    IsEnabled="{Binding Workspace.IsConverting, FallbackValue=False}">
                <Rectangle Fill="{StaticResource StopIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding Workspace.PrintCommand, FallbackValue={x:Null}}" 
                    ToolTip="{DynamicResource Main_Menu_Print_Tooltip}" 
                    IsEnabled="{Binding Workspace.IsCompiled, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource PrintIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Rectangle Width="1" 
                       Margin="0 2" 
                       Fill="{DynamicResource MahApps.Brushes.Gray9}"/>
            <Button Command="{Binding Workspace.OpenWizardCommand, FallbackValue={x:Null}}" 
                    CommandParameter="{StaticResource True}"
                    ToolTip="Open Markdown Wizard" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource WizardIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Rectangle Width="1" 
                       Margin="0 2" 
                       Fill="{DynamicResource MahApps.Brushes.Gray9}"/>
            <Button Command="{Binding BoldCommand}"
                    ToolTip="Bold" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource BoldIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding ItalicCommand}"
                    ToolTip="Italic" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource ItalicIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding ItalicCommand}"
                    ToolTip="Underline" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource UnderlineIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding QuoteCommand}"
                    ToolTip="Quote" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource QuoteIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding CommentCommand}"
                    ToolTip="Comment" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource HtmlIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Button Command="{Binding VerbatimCommand}"
                    ToolTip="Verbatim Code" 
                    IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <Rectangle Fill="{DynamicResource HtmlIcon}" 
                           Height="16" 
                           Width="16"/>
            </Button>
            <Controls:SplitButton Style="{StaticResource SplitButtonStyle}" 
                                  Width="30" 
                                  Margin="2 0 0 0"
                                  IsEnabled="{Binding Workspace.SelectedItem.IsConvertable, FallbackValue=False}">
                <MenuItem Icon="x" Header="Remove List" Command="{Binding RemoveListCommand}"/>
                <MenuItem Icon="#." Header="Numbered Dot List" Command="{Binding DotNumberListCommand}"/>
                <MenuItem Icon="#)" Header="Numbered Bracket List" Command="{Binding ParenthesisNumberListCommand}"/>
                <MenuItem Icon="a." Header="Alphabetical Dot List" Command="{Binding DotAlphabeticalListCommand}"/>
                <MenuItem Icon="a)" Header="Alphabetical Bracket List" Command="{Binding DotAlphabeticalListCommand}"/>
                <MenuItem Icon="•" Header="Unordered List" Command="{Binding BulletListCommand}"/>
                <Controls:SplitButton.SelectedIndex>0</Controls:SplitButton.SelectedIndex>
            </Controls:SplitButton>
        </StackPanel>

        <Grid Grid.Column="0" 
              Grid.Row="2"
              Margin="4 2 0 4">
            <Grid.RowDefinitions>
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="{x:Type RowDefinition}">
                            <Setter Property="Height" Value="3*" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExplorerVisible}" Value="False">
                                    <Setter Property="Height" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
                <RowDefinition Height="4"/>
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="{x:Type RowDefinition}">
                            <Setter Property="Height" Value="2*" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutlineVisible}" Value="False">
                                    <Setter Property="Height" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
            </Grid.RowDefinitions>
        </Grid>

        <Controls:TreeGrid Margin="6" Grid.ColumnSpan="3" Grid.Row="2" SplitterThickness="6" Tree="{Binding ContentTree}">
        </Controls:TreeGrid>

        <Grid x:Name="StatusGrid" 
              DataContext="{Binding Messages}" 
              Grid.Row="3" 
              Grid.ColumnSpan="3" 
              Height="23">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NewestMessage.Type}">
                            <DataTrigger.Value>
                                <ViewModel:MessageType>Success</ViewModel:MessageType>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NewestMessage.Type}">
                            <DataTrigger.Value>
                                <ViewModel:MessageType>Warning</ViewModel:MessageType>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="#FFC53A"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NewestMessage.Type}">
                            <DataTrigger.Value>
                                <ViewModel:MessageType>Error</ViewModel:MessageType>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="#AC2222"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NewestMessage.Type}">
                            <DataTrigger.Value>
                                <ViewModel:MessageType>Working</ViewModel:MessageType>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="#CA5100"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>
            <Control Height="16" 
                     Width="16" 
                     Margin="5 3 3 3" 
                     DataContext="{Binding NewestMessage.Type}" 
                     Style="{StaticResource StatusStyle}"/>
            <Controls:BindableTextBlock Grid.Column="1"
                       x:Name="StatusIndicator"
                       Foreground="White"
                       TextWrapping="NoWrap"
                       TextTrimming="WordEllipsis"
                       VerticalAlignment="Center"
                       Margin="4 0 0 0"
                       Inline="{Binding NewestMessage.Content}"/>
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal" 
                        Visibility="{Binding Workspace.SelectedItem, Converter={StaticResource StringToVisibilityConverter}}"
                        DataContext="{Binding ElementName=DocdownWindow, Path=DataContext}">
                <TextBlock Foreground="White"
                       VerticalAlignment="Center"
                       Text="{DynamicResource Main_WordCount}" Margin="0 0 4 0"/>
                <TextBlock Foreground="White"
                       VerticalAlignment="Center"
                       Text="{Binding Workspace.SelectedItem.WordCount}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Metro:MetroWindow>